#!/usr/bin/env bash

export PATH="$HOME/.local/bin:$PATH"

# If we can't find brew, then sourcing .bashrc_local might update $PATH
if ! command -v brew &> /dev/null; then
    [ -e "$HOME/.bashrc_local" ] && source $HOME/.bashrc_local
fi

if ! command -v brew &> /dev/null; then
    echo "Installing brew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

    # This only adds homebrew to PATH on linux
    # TODO: add to path on OSX too
    if [ -f /home/linuxbrew/.linuxbrew/bin/brew ]; then
        echo 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)' >> $HOME/.bashrc_local
        eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
    elif [ -f $HOME/.linuxbrew/bin/brew ]; then
        echo 'eval $($HOME/.linuxbrew/bin/brew shellenv)' >> $HOME/.bashrc_local
        eval $($HOME/.linuxbrew/bin/brew shellenv)
    fi
    echo "PATH after brew install:"
    echo $PATH
fi

if ! command -v brew &> /dev/null; then
    echo "cannot find brew, exiting"
    exit 1
fi

if ! brew list --formula | grep -q python.*3; then
    echo "Installing python3 from brew..."
    brew install -q python3
fi

PY3DIR=$(dirname $(which python3))
PIPDIR=$(dirname $(which pip3))
if [ "$PY3DIR" != "$PIPDIR" ]; then
    echo "python3 ($PY3DIR) != pip3 ($PIPDIR), exiting"
    exit 1
fi

pip3 config -q --user set global.use-feature 2020-resolver
pip3 install -q --user --upgrade pip pipx

if ! pipx list | grep -q package\ ansible; then
    pipx install --include-deps ansible
fi

if ! [ -d "$HOME/.ansible/collections/ansible_collections/community/general" ]; then
    ansible-galaxy collection install community.general
fi

export ANSIBLE_LOCALHOST_WARNING=False
ansible-playbook -i /dev/null ansible.yml

nvim -c 'try | PlugInstall | catch | endtry | qa!'
