
OUTER_BG=$TMUX_BLACK
OUTER_FG=$TMUX_LOCAL_ACCENT_COLOR

INFO_BG=$TMUX_GRAY
INFO_FG=$TMUX_WHITE

STATUS_BG=$TMUX_LOCAL_PRIMARY_COLOR
STATUS_FG=$TMUX_BLACK

SELECT_BG=$TMUX_LOCAL_ACCENT_COLOR
SELECT_FG=$TMUX_BLACK

BELL_FG=$TMUX_WHITE
BELL_BG=$TMUX_BLACK

L1=$POWERLINE_FILLED_LEFT
L2=$POWERLINE_LEFT
R1=$POWERLINE_FILLED_RIGHT
R2=$POWERLINE_RIGHT

WINDOW_INDEX="#[nobold fg=$STATUS_FG]$L1#[reverse] #{window_index}"
WINDOW_END=" #[noreverse]#[fg=$STATUS_BG bg=$STATUS_FG]$L1"
WINDOW_SELECTED="#[bg=$STATUS_BG fg=$SELECT_BG]$L1#[bg=$SELECT_BG fg=$SELECT_FG]"
WINDOW_NORMAL="#[push-default]#[bg=$STATUS_BG fg=$STATUS_FG]$L2#[default]#[bg=$STATUS_BG]"

SYNC="#{?pane_synchronized, $SYNC_ICON,}"
ZOOM="#{?window_zoomed_flag, $ZOOM_ICON,}"
PREFIX="#{?client_prefix, $PREFIX_ICON,}"
LOCK="#{?#{==:#{client_key_table},off}, $LOCK_ICON,}"
ICONBAR="$SYNC$ZOOM$PREFIX$LOCK"
T="$CLOCK_ICON$TMUX_TIME"
D=$TMUX_DATE
CLOCK="#[fg=$STATUS_FG]$L1#[bg=$OUTER_BG fg=$OUTER_FG] $CALENDAR_ICON $D $L1#[reverse] $T "

W=$TMUX_WINDOW_NAME
set -g window-status-current-format "$WINDOW_SELECTED$W$WINDOW_INDEX*$WINDOW_END"
set -g window-status-format "$WINDOW_NORMAL$W$WINDOW_INDEX$WINDOW_END"

set -g pane-active-border-style fg=$OUTER_FG
set -g pane-border-style fg=$TMUX_GRAY
set -g status-justify right
set -g status-position bottom
set -g status-style "bg=$STATUS_BG fg=$STATUS_FG"
set -g window-status-bell-style "fg=$BELL_FG bg=$BELL_BG bold"
set -g status-right "#[bg=$STATUS_BG fg=$INFO_BG]$L1#[bg=$INFO_BG fg=$INFO_FG]$ICONBAR $CLOCK"
set -g status-right-length $TMUX_RIGHT_CHARS
set -g status-left-length $TMUX_LEFT_CHARS
PT="$TMUX_PANE_TITLE"
PP="$TMUX_PANE_PATH"
set -g status-left "#[bg=$OUTER_BG fg=$OUTER_FG reverse]$NETWORK_ICON$IP_ADDR$SERVER_ICON#H$FOLDER_ICON$PP #[noreverse]$R1 $PT#[bg=$STATUS_BG fg=$STATUS_FG]$R1"

bind-key -n F1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n F2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n F3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n F4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n F5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n F6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n F7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n F8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'

# "lock" the pane hotkeys so a nested session can use them
bind-key -n F12 \
	set prefix None \; \
	set key-table off \; \
	if -F '#{pane_in_mode}' 'send-keys -X cancel' \; \
	refresh-client -S \;

bind -T off F12 \
	set -u prefix \; \
	set -u key-table \; \
	refresh-client -S

bind -T off F1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind -T off F2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind -T off F3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind -T off F4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind -T off F5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind -T off F6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind -T off F7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind -T off F8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
