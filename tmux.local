# Color theme
# ===========

# Separator strings
# ==============

L1=$POWERLINE_FILLED_LEFT
L2=$POWERLINE_LEFT
R1=$POWERLINE_FILLED_RIGHT
R2=$POWERLINE_RIGHT

# Styles
# ======
set -g pane-active-border-style fg=$OUTER_FG
set -g pane-border-style fg=$TMUX_GRAY
set -g status-justify right
set -g status-position bottom
set -g status-style "bg=$STATUS_BG fg=$STATUS_FG"
set -g window-status-bell-style "fg=$BELL_FG bg=$BELL_BG bold"
set -g status-right-length $TMUX_RIGHT_CHARS
set -g status-left-length $TMUX_LEFT_CHARS

# Status line elements
# ====================

# Window list
# -----------
_IDX_="#[nobold fg=$STATUS_FG]$L1#[reverse] #{window_index}"
_END_=" #[noreverse]#[fg=$STATUS_BG bg=$STATUS_FG]$L1"
_SEL_="#[bg=$STATUS_BG fg=$ACTIVE_BG]$L1#[bg=$ACTIVE_BG fg=$ACTIVE_FG]"
_NORM_="#[push-default]#[bg=$STATUS_BG fg=$STATUS_FG]$L2#[default]#[bg=$STATUS_BG]"
_SHARED_="$TMUX_WINDOW_NAME$_IDX_$_END_"
set -g window-status-format "$_NORM_$_SHARED_"
set -g window-status-current-format "$_SEL_$_SHARED_"

# Icon bar
# --------
_S_="#{?pane_synchronized, $SYNC_ICON,}"
_Z_="#{?window_zoomed_flag, $ZOOM_ICON,}"
_P_="#{?client_prefix, $PREFIX_ICON,}"
_L_="#{?#{==:#{client_key_table},off}, $LOCK_ICON,}"
ICONBAR="$_S_$_Z_$_P_$_L_"

# Clock
# -----
_TIME_="$CLOCK_ICON$TMUX_TIME"
_DATE_="$CALENDAR_ICON $TMUX_DATE"
_CLOCK_="#[fg=$STATUS_FG]$L1#[bg=$OUTER_BG fg=$OUTER_FG] $_DATE_ $L1#[reverse] $_TIME_ "

# Network / host info
# -------------------
_LOCATION_="$NETWORK_ICON$IP_ADDR$SERVER_ICON#H$FOLDER_ICON$TMUX_PANE_PATH "

# Formats
# =======
set -g status 2
set -g status-format[1] "#[nolist align=right range=right]$CLOCK"
set -g status-right "#[bg=$STATUS_BG fg=$INFO_BG]$L1#[bg=$INFO_BG fg=$INFO_FG]$_ICONBAR_ $_CLOCK_"
#set -g status-left "#[bg=$OUTER_BG fg=$OUTER_FG reverse]$_LOCATION_#[noreverse]$R1 $TMUX_PANE_TITLE#[bg=$STATUS_BG fg=$STATUS_FG]$R1"

set -g status-left "${OUTER}hello${O_R_S}world${S_R_O}!"

# Keybinds
# ========
bind-key -n F1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n F2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n F3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n F4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n F5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n F6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n F7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n F8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'

# "lock" the pane hotkeys so a nested session can use them
bind-key -n F12 \
	set prefix None \; \
	set key-table off \; \
	if -F '#{pane_in_mode}' 'send-keys -X cancel' \; \
	refresh-client -S \;

bind -T off F12 \
	set -u prefix \; \
	set -u key-table \; \
	refresh-client -S

bind -T off F1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind -T off F2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind -T off F3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind -T off F4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind -T off F5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind -T off F6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind -T off F7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind -T off F8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
